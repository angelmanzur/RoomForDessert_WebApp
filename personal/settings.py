"""
Django settings for personal project.

Generated by 'django-admin startproject' using Django 2.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import pickle

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '***************************************************'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['https://leaveroomfordessert.appspot.com',
    'leaveroomfordessert.appspot.com','127.0.0.1'
    ]
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

# STATIC_URL = '/static/'

STATIC_URL = 'https://storage.googleapis.com/<GOOGLE_BUCKET_STORAGE>/static/'
STATIC_ROOT = 'static/'

DEFAULT_FILE_STORAGE = 'storages.backends.gcloud.GoogleCloudStorage'
GS_BUCKET_NAME = '<GOOGLE_BUCKET_STORAGE>'
#import word index from pickle file

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'leave_room'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'personal.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['personal/templates/'
                ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.template.context_processors.static',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'personal.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/New_York'

USE_I18N = True

USE_L10N = True

USE_TZ = True




# word_index_file = '../../Room_for_dessert/models/word_index.pkl'
word_index_file = 'models/word_index.pkl'
word_index = pickle.load(open(word_index_file, 'rb'))
WORD_INDEX= word_index

#import the word2vector model
# filename = '../../Room_for_dessert/models/w2vec_model_clean2.pkl'
filename = 'models/w2vec_model_clean2.pkl'
# if os.path.exists(filename):
W2V_MODEL = pickle.load(open(filename, 'rb'))


import tensorflow as tf
import json
#from keras.models import model_from_json
# from tensorflow.keras.layers import LSTM      
# from tensorflow.keras.models import load_model
# from keras.models import load_model
from keras.models import load_model
from keras.layers import LSTM
#import the Bidirectional LSTM model
# model_file = '../../Room_for_dessert/models/rnn_w2vec_model.pkl'
#model_file = 'models/rnn_w2vec_model.pkl'
#LSTM_MODEL = pickle.load(open(model_file,'rb'))

#load the model
# json_file = open('models/rnn_w2vec_model.json')
# loaded_model_json = json_file.read()
# json_file.close()
# loaded_model = model_from_json(loaded_model_json)
## load weigths
# loaded_model.load_weights('models/rnn_w2vec_model_weights.h5')
loaded_model = load_model('models/rnn_w2vec_model.h5')
print('loaded model')
LSTM_MODEL = loaded_model

GRAPH = tf.get_default_graph()
